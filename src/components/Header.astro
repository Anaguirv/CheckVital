---
const links = [
  { label: "Inicio", target: "inicio" },
  { label: "Servicios", target: "tratamientos" },
  { label: "Contacto", target: "contacto" },
];
---

<header class="fixed top-0 inset-x-0 z-50 transition-transform duration-300 ease-in-out md:translate-y-0" id="header">
  <div class="bg-white/70 backdrop-blur-md shadow transition-all duration-300">
    <div class="max-w-7xl mx-auto px-4 py-4 flex items-center justify-between overflow-hidden">
      
      <!-- Logo -->
      <a href="/" onclick={`navigateTo(event, 'inicio')`} class="block">
        <div class="flex items-center space-x-2 h-12 px-3 transition-transform duration-300 ease-in-out hover:scale-[1.05] origin-center">
          <img src="/icono.png" alt="Logo de Check Vital" class="w-10 h-10 object-contain" />
          <h3 class="text-xl font-bold text-gray-900 leading-none">
            Check<span class="text-primary">Vital</span>
          </h3>
        </div>
      </a>

      <!-- Botón menú mobile -->
      <button 
        id="menu-toggle"
        class="md:hidden text-gray-700 focus:outline-none focus:ring-2 focus:ring-primary"
        aria-label="Abrir menú">
        <svg class="h-6 w-6" fill="none" stroke="currentColor" stroke-width="2"
          viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
          <path d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>

      <!-- Navegación desktop -->
      <nav class="hidden md:flex md:space-x-6 text-m font-medium md:items-center">
        {links.map(({ label, target }) => (
          <a 
            href="/" 
            onclick={`navigateTo(event, '${target}')`} 
            class="nav-link block px-6 py-3 text-gray-700 hover:text-primary"
          >
            {label}
          </a>
        ))}
      </nav>
    </div>
  </div>

  <!-- Navegación mobile -->
  <nav id="menu" class="bg-white/70 backdrop-blur-md shadow hidden md:hidden flex-col w-full z-40">
    {links.map(({ label, target }) => (
      <a 
        href="/" 
        onclick={`navigateTo(event, '${target}')`} 
        class="block px-6 py-3 text-gray-700 hover:text-primary"
      >
        {label}
      </a>
    ))}
  </nav>
</header>

<!-- Scroll + navegación SPA -->
<script is:inline type="module">
  const scrollToSection = (id) => {
    requestAnimationFrame(() => {
      const el = document.getElementById(id);
      if (el) {
        el.scrollIntoView({ behavior: 'smooth' });
      }
    });
  };

  window.addEventListener('DOMContentLoaded', () => {
    const target = sessionStorage.getItem('scrollTarget');
    if (target) {
      scrollToSection(target);
      sessionStorage.removeItem('scrollTarget');
    }
  });

  window.navigateTo = (e, id) => {
    e.preventDefault();
    if (window.location.pathname !== '/') {
      sessionStorage.setItem('scrollTarget', id);
      window.location.href = '/';
    } else {
      scrollToSection(id);
    }
  };
</script>

<!-- Toggle menú mobile -->
<script is:inline>
  document.addEventListener('click', function (e) {
    const toggle = e.target.closest('#menu-toggle');
    if (toggle) {
      const menu = document.getElementById('menu');
      if (menu) {
        menu.classList.toggle('hidden');
        menu.classList.toggle('flex');
      }
    }
  });
</script>

<script is:inline>
  let lastScroll = window.scrollY;

  window.addEventListener('scroll', () => {
    const header = document.getElementById('header');
    const currentScroll = window.scrollY;

    if (!header) return;

    // Aplica solo si está en mobile (pantallas menores a 768px)
    const isMobile = window.innerWidth < 768;

    if (!isMobile) return;

    if (currentScroll > lastScroll && currentScroll > 80) {
      header.classList.add('-translate-y-full');
    } else {
      header.classList.remove('-translate-y-full');
    }

    lastScroll = currentScroll;
  });
</script>
